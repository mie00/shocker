#!/bin/sh
btrfs_path='/var/shocker'
cgroups='cpu,cpuacct,memory'
dirname=$(dirname "$(readlink -f "$0")")

# source helper utils
#shellcheck disable=SC1090
. "$dirname"/utils.sh

usage () {
cat << USAGE
  shocker-stop - stop a running container

  Usage: shocker stop <container_id>

  Options:
   -h, --help output usage information
   -k, --kill use sigkill instead of sigterm

  Examples:
   $ shocker stop ps_1235          # stop a running container
   $ shocker stop -k ps_1234       # stop a running container (using sigkill)
   $ shocker stop --kill ps_1234   # stop a running container (using sigkill)
USAGE
}

sig=TERM
[ "$#" -eq 0 ] || [ "$#" -gt 2 ] && { usage; exit 1; }

getopt -T >/dev/null
if [ "$?" -eq 4 ]; then
    args="$(getopt -n "$0" --long kill,help --options kh -- "$@")"
else
    args="$(getopt -n "$0" kh -- "$@")"
fi

[ $? -ne 0 ] && { usage; exit 2; }

eval set -- "$args"

while true; do
  case "$1" in
    -h|--help ) usage; exit 1 ;;
    -k|--kill ) shift; sig=KILL ;;
    --        ) shift; break ;;
    *         ) break ;;
  esac
done

shocker_exists "$1"
if [ "$?" -ne 0 ]; then
  printf "No container named '%s' exists\n" "$1" >&2
  exit 1
fi

state=$(get_state "$1")
case $state in
  stopped) printf "Container '%s' is already stopped\n" "$1" >&2 ;;
  crashed) printf "Container '%s' crashed, 'shocker-cleanup\n" "$1" >&2 ;;
  missing) printf "Container '%s' does not exist\n" "$1" >&2 ;;
esac

sort -nr "/sys/fs/cgroup/cpuacct/$1/tasks" | while read -r proc; do
  kill -s "$sig" -- "$proc" 2>/dev/null
done

findmnt -r | grep "^$btrfs_path/$1/" | cut -f1 -d' ' | xargs umount
ip link del dev veth0_"$1"
ip netns del netns_"$1"
cgdelete -g "$cgroups:/$1" >/dev/null 2>&1 /dev/null
